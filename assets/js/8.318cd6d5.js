(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{321:function(t,e,a){"use strict";a.r(e);var s=a(7),i=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"基本理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本理解"}},[t._v("#")]),t._v(" 基本理解")]),t._v(" "),e("blockquote",[e("p",[t._v("分支是指向提交对象的指针。\nGit 分支默认名是master, 因为 政治正确改成了 main。\n每一次提交操作， 都会自动向前移动。\n分支的创建删除是一个指针的创建和移动， 所以Git 鼓励开发人员 频繁使用分支")])]),t._v(" "),e("h1",{attrs:{id:"基本命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本命令"}},[t._v("#")]),t._v(" 基本命令")]),t._v(" "),e("h2",{attrs:{id:"git-branch-git-checkout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-branch-git-checkout"}},[t._v("#")]),t._v(" Git branch/ git checkout")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch issue53 # 创建一个 issue53 的分支\ngit checkout issue53 # 切换到 issue53 的分支\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 前面两句等于下面一句")]),t._v("\n\ngit checkout -b issue53\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 分支切换")]),t._v("\ngit checkout main # issue53\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当完成分支合并，可以删除分支")]),t._v("\ngit branch -d issue53\n")])])]),e("h2",{attrs:{id:"git-merge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-merge"}},[t._v("#")]),t._v(" git merge")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge issue53\n")])])]),e("h2",{attrs:{id:"git-rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[t._v("#")]),t._v(" git rebase")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout main\ngit rebase issue53\n")])])]),e("h1",{attrs:{id:"分支的合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支的合并"}},[t._v("#")]),t._v(" 分支的合并")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/12572096/1667480576319-24c92456-0bbb-4634-9d21-94bad5728004.png#averageHue=%23fbf9f8&clientId=ue06e917c-caca-4&from=paste&height=282&id=u55f09604&originHeight=353&originWidth=838&originalType=binary&ratio=1&rotation=0&showTitle=false&size=85436&status=done&style=none&taskId=u7d6c00f7-c81a-4135-8d97-cb54308e01c&title=&width=670.4",alt:"image.png"}}),t._v(" "),e("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/12572096/1667480840075-0332e9fb-e6da-46be-bd2e-003786a103dd.png#averageHue=%23fafafa&clientId=ue06e917c-caca-4&from=paste&height=271&id=u15a453a1&originHeight=339&originWidth=589&originalType=binary&ratio=1&rotation=0&showTitle=false&size=18215&status=done&style=none&taskId=u17a496b6-9d94-4cbc-8439-72f08def304&title=&width=471.2",alt:"image.png"}}),t._v("\n初始大概是这个样子")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/12572096/1667482872696-61d641d8-43f3-44c7-a002-15ee360911b6.png#averageHue=%23f8f8f8&clientId=ue06e917c-caca-4&from=paste&height=481&id=u79fe209a&originHeight=601&originWidth=1385&originalType=binary&ratio=1&rotation=0&showTitle=false&size=71801&status=done&style=none&taskId=ubfd1df7a-7754-4a55-a252-2f20d3558fd&title=&width=1108",alt:"image.png"}})]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout-b module\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# do something")]),t._v("\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"do something"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# do something")]),t._v("\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"do something"')]),t._v("\n\ngit checkout -b issue53\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  fixing issue53")]),t._v("\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fixing issue53 now"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hotfixed")]),t._v("\ngit checkout -b hotfixed\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fix hotfix")]),t._v("\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hotfixed done"')]),t._v("\ngit checkout main\ngit merge hotfix\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# check branch issue53")]),t._v("\ngit checkout issue53\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fixed issue53"')]),t._v("\n\ngit checkout main\ngit merge issue53\n")])])]),e("h2",{attrs:{id:"git-rebase-和-git-merge-的不同"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase-和-git-merge-的不同"}},[t._v("#")]),t._v(" git rebase 和 git merge 的不同")]),t._v(" "),e("p",[t._v("git rebase 可以保证提交树的整洁\ngit merge 可以保证提交历史\n由此诞生出两派， 一种认为需要保证提交的历史， 认为提交历史不能被修改。\n一种认为提交历史并不重要，重要的是")])])}),[],!1,null,null,null);e.default=i.exports}}]);